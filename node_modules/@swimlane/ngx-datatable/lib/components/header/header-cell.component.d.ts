import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { TableColumn } from '../../types/table-column.type';
import { SortDirection } from '../../types/sort-direction.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderCellComponent {
    private cd;
    sortType: SortType;
    sortAscendingIcon: string;
    sortDescendingIcon: string;
    isTarget: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    _allRowsSelected: boolean;
    set allRowsSelected(value: boolean);
    get allRowsSelected(): boolean;
    selectionType: SelectionType;
    set column(column: TableColumn);
    get column(): TableColumn;
    headerHeight: number;
    set sorts(val: any[]);
    get sorts(): any[];
    sort: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    get columnCssClasses(): any;
    get name(): string;
    get minWidth(): number;
    get maxWidth(): number;
    get width(): number;
    get isCheckboxable(): boolean;
    sortFn: any;
    sortClass: string;
    sortDir: SortDirection;
    selectFn: any;
    cellContext: any;
    private _column;
    private _sorts;
    constructor(cd: ChangeDetectorRef);
    onContextmenu($event: MouseEvent): void;
    calcSortDir(sorts: any[]): any;
    onSort(): void;
    calcSortClass(sortDir: SortDirection): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableHeaderCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableHeaderCellComponent, "datatable-header-cell", never, { "allRowsSelected": "allRowsSelected"; "column": "column"; "sorts": "sorts"; "sortType": "sortType"; "sortAscendingIcon": "sortAscendingIcon"; "sortDescendingIcon": "sortDescendingIcon"; "isTarget": "isTarget"; "targetMarkerTemplate": "targetMarkerTemplate"; "targetMarkerContext": "targetMarkerContext"; "selectionType": "selectionType"; "headerHeight": "headerHeight"; }, { "sort": "sort"; "select": "select"; "columnContextmenu": "columnContextmenu"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWNlbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhlYWRlci1jZWxsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTb3J0VHlwZSB9IGZyb20gJy4uLy4uL3R5cGVzL3NvcnQudHlwZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vdHlwZXMvc2VsZWN0aW9uLnR5cGUnO1xuaW1wb3J0IHsgVGFibGVDb2x1bW4gfSBmcm9tICcuLi8uLi90eXBlcy90YWJsZS1jb2x1bW4udHlwZSc7XG5pbXBvcnQgeyBTb3J0RGlyZWN0aW9uIH0gZnJvbSAnLi4vLi4vdHlwZXMvc29ydC1kaXJlY3Rpb24udHlwZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGVIZWFkZXJDZWxsQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIGNkO1xuICAgIHNvcnRUeXBlOiBTb3J0VHlwZTtcbiAgICBzb3J0QXNjZW5kaW5nSWNvbjogc3RyaW5nO1xuICAgIHNvcnREZXNjZW5kaW5nSWNvbjogc3RyaW5nO1xuICAgIGlzVGFyZ2V0OiBib29sZWFuO1xuICAgIHRhcmdldE1hcmtlclRlbXBsYXRlOiBhbnk7XG4gICAgdGFyZ2V0TWFya2VyQ29udGV4dDogYW55O1xuICAgIF9hbGxSb3dzU2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgc2V0IGFsbFJvd3NTZWxlY3RlZCh2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IGFsbFJvd3NTZWxlY3RlZCgpOiBib29sZWFuO1xuICAgIHNlbGVjdGlvblR5cGU6IFNlbGVjdGlvblR5cGU7XG4gICAgc2V0IGNvbHVtbihjb2x1bW46IFRhYmxlQ29sdW1uKTtcbiAgICBnZXQgY29sdW1uKCk6IFRhYmxlQ29sdW1uO1xuICAgIGhlYWRlckhlaWdodDogbnVtYmVyO1xuICAgIHNldCBzb3J0cyh2YWw6IGFueVtdKTtcbiAgICBnZXQgc29ydHMoKTogYW55W107XG4gICAgc29ydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb2x1bW5Db250ZXh0bWVudTogRXZlbnRFbWl0dGVyPHtcbiAgICAgICAgZXZlbnQ6IE1vdXNlRXZlbnQ7XG4gICAgICAgIGNvbHVtbjogYW55O1xuICAgIH0+O1xuICAgIGdldCBjb2x1bW5Dc3NDbGFzc2VzKCk6IGFueTtcbiAgICBnZXQgbmFtZSgpOiBzdHJpbmc7XG4gICAgZ2V0IG1pbldpZHRoKCk6IG51bWJlcjtcbiAgICBnZXQgbWF4V2lkdGgoKTogbnVtYmVyO1xuICAgIGdldCB3aWR0aCgpOiBudW1iZXI7XG4gICAgZ2V0IGlzQ2hlY2tib3hhYmxlKCk6IGJvb2xlYW47XG4gICAgc29ydEZuOiBhbnk7XG4gICAgc29ydENsYXNzOiBzdHJpbmc7XG4gICAgc29ydERpcjogU29ydERpcmVjdGlvbjtcbiAgICBzZWxlY3RGbjogYW55O1xuICAgIGNlbGxDb250ZXh0OiBhbnk7XG4gICAgcHJpdmF0ZSBfY29sdW1uO1xuICAgIHByaXZhdGUgX3NvcnRzO1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgb25Db250ZXh0bWVudSgkZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIGNhbGNTb3J0RGlyKHNvcnRzOiBhbnlbXSk6IGFueTtcbiAgICBvblNvcnQoKTogdm9pZDtcbiAgICBjYWxjU29ydENsYXNzKHNvcnREaXI6IFNvcnREaXJlY3Rpb24pOiBzdHJpbmc7XG59XG4iXX0=